---
    - name: Reload and Update services
      ansible.builtin.systemd_service:
          daemon_reload: true
          scope: user

    - name: Get All Services that Are Related to the Server
      ansible.builtin.command: "systemctl --user list-units --type=service --all --no-pager --quiet --plain"
      register: systemd_user_command_output
      changed_when: false

    - name: Filter Output and Get Service Names from the First Column
      set_fact:
        systemd_user_all_units: "{{ systemd_user_all_units|default([]) + [item.split(' ')[0]] }}"
      loop: "{{ systemd_user_command_output.stdout_lines }}"
      no_log: true

    - name: Remove Duplicate Services from the List of Enabled Services
      set_fact:
        systemd_user_unique_output: "{{ systemd_user_all_units | unique }}"

    - name: Get Enabled Services Based on Prefix
      set_fact:
        systemd_user_morla_all_services: "{{ systemd_user_unique_output | select('regex', '^morla') | list }}"

    - name: Filter Out Networks from List of Enabled Services
      set_fact:
        systemd_user_morla_services: "{{ systemd_user_morla_all_services | difference(morla_container_networks | map('regex_replace', '$', '.service') | list) }}"

    - name: Filter Out Enabled Container from List of Enabled Services
      set_fact:
        disabled_systemd_services: "{{ systemd_user_morla_services | difference(morla_systemd_autostart_containers | map('regex_replace', '$', '.service') | list) }}"

    - name: Disable and Stop Services for Disabled Containers
      ansible.builtin.systemd:
          name: '{{ item }}'
          enabled: yes
          state: started
          scope: user
      loop: '{{ disabled_systemd_services }}'
      ignore_errors: yes

    - name: Enable and Start Networks
      ansible.builtin.systemd:
          name: '{{ item }}'
          enabled: yes
          state: started
          scope: user
      loop: '{{ morla_container_networks }}'

    - name: Enable and Start Containers
      ansible.builtin.systemd:
          name: '{{ item }}'
          enabled: yes
          state: started
          scope: user
      loop: '{{ morla_systemd_autostart_containers }}'
      ignore_errors: yes

    - name: Enable and Start Pods
      ansible.builtin.systemd:
          name: '{{ item }}'
          enabled: yes
          enabled: yes
          scope: user
      loop: '{{ morla_systemd_autostart_pods }}'

    - name: Check Linger Enabled
      ansible.builtin.shell: loginctl show-user {{ morla_user_username }} --property=Linger
      register: check_linger_equals_yes
      changed_when: false

    - name: Enable Linger to Autostart Containers with No Login
  # https://docs.podman.io/en/latest/markdown/podman-generate-systemd.1.html
      ansible.builtin.shell: loginctl enable-linger {{ morla_user_username }}
      when: check_linger_equals_yes.stdout != "Linger=yes"
